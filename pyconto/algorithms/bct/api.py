""" API for Brain Connectivity Toolbox with automatic conversion of
NumPy arrays and memory management.

Python bindings for BCT can be generated by calling make with the target swig.
This wraps all BCT functions in a Python module. In addition to the standard functions,
this module includes bct::from_gsl, bct::to_gslv, and bct::to_gslm, which allow
conversion between native Python lists and gsl_vector*s or gsl_matrix*s:

import bct
m = bct.to_gslv([[0, 1, 0], [0, 0, 1], [1, 0, 0]])
deg = bct.degrees_dir(m)
print bct.from_gsl(deg)  # [2.0, 2.0, 2.0]
bct.gsl_free(m)
bct.gsl_free(deg)

bct::to_gslv and bct::to_gslm may also be used to convert the cortical connectivity
data sets (or any double*) to gsl_matrix*s:

import bct
fve30 = bct.to_gslm(bct.fve30, 30, 30)
print bct.density_dir(fve30)  # 0.35747126436781607
bct.gsl_free(fve30)

"""

import sys
# check for linux support
if sys.platform == 'linux2':   
    # examine the architecture
    import platform as pf
    if '32' in pf.architecture()[0]:
        import bit32.bct as bct
    elif '64' in pf.architecture()[0]:
        import bit64.bct as bct
    else:
        raise('Can not determine your architecture settings.')
        

